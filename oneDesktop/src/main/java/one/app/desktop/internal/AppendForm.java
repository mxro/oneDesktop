/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package one.app.desktop.internal;

import java.util.List;
import javax.swing.JOptionPane;
import one.client.jre.OneJre;
import one.core.domain.OneClient;
import one.core.dsl.CoreDsl;
import one.core.dsl.callbacks.WhenCommitted;
import one.core.dsl.callbacks.WhenLoaded;
import one.core.dsl.callbacks.WhenShutdown;
import one.core.dsl.callbacks.results.WithCommittedResult;
import one.core.dsl.callbacks.results.WithLoadResult;

/**
 *
 * @author mroh004
 */
public class AppendForm extends javax.swing.JPanel {

    /**
     * Creates new form AppendForm
     */
    public AppendForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        appendNodeTextField = new javax.swing.JTextField();
        toNodeTextField = new javax.swing.JTextField();
        secretTextField = new javax.swing.JTextField();
        appendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        referenceRadioButton = new javax.swing.JRadioButton();
        valueRadioButton = new javax.swing.JRadioButton();
        plainTextRadioButton = new javax.swing.JRadioButton();

        jLabel1.setText("Append Node:");

        jLabel2.setText("To Node:");

        jLabel3.setText("Secret:");

        appendButton.setText("Append");
        appendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appendButtonActionPerformed(evt);
            }
        });

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        jLabel4.setText("Append As:");

        buttonGroup1.add(referenceRadioButton);
        referenceRadioButton.setSelected(true);
        referenceRadioButton.setText("Refernece");

        buttonGroup1.add(valueRadioButton);
        valueRadioButton.setText("Value");

        buttonGroup1.add(plainTextRadioButton);
        plainTextRadioButton.setText("Plain Text");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(appendButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(referenceRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valueRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(plainTextRadioButton)
                                .addGap(0, 102, Short.MAX_VALUE))
                            .addComponent(appendNodeTextField)
                            .addComponent(toNodeTextField)
                            .addComponent(secretTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(appendNodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(toNodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(secretTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(referenceRadioButton)
                    .addComponent(valueRadioButton)
                    .addComponent(plainTextRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(appendButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void appendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appendButtonActionPerformed
        
        appendButton.setEnabled(false);
        
        final CoreDsl dsl = OneJre.init("<no api key>");
        
        final OneClient client = dsl.createClient();
        
        dsl.load(dsl.reference(toNodeTextField.getText())).withSecret(secretTextField.getText()).in(client).and(new WhenLoaded() {

            @Override
            public void thenDo(WithLoadResult<Object> wlr) {
                
                Object toAppend;
                if (plainTextRadioButton.isSelected()) {
                    toAppend = appendNodeTextField.getText();
                } if (referenceRadioButton.isSelected()) {
                   toAppend = dsl.reference(appendNodeTextField.getText());
                } else {
                    toAppend = appendNodeTextField.getText();
                }
                
                if (valueRadioButton.isSelected()) {
                    dsl.append(toAppend).to(wlr.loadedNode()).atClosestAddress("./node").in(client);
                            } else {
                    dsl.append(toAppend).to(wlr.loadedNode()).in(client);
                }
                
                final List<String> children = dsl.selectFrom(wlr.loadedNode()).allChildrenFast().in(client);
                
                dsl.shutdown(client).and(new WhenShutdown() {

                    @Override
                    public void thenDo() {
                       
                        outputTextArea.setText(outputTextArea.getText()+"Node appended successfully. Children of parent node: \n"+
                                "  "+children+"\n\n");
                        
                        appendButton.setEnabled(true);
                       
                    }

                    @Override
                    public void onFailure(Throwable t) {
                        appendButton.setEnabled(true);
                        JOptionPane.showMessageDialog(appendButton, "Failure while appending node:\n"+t.getMessage());
                    }
                    
                    
                });
                
                
                
            }

            @Override
            public void onFailure(Throwable t) {
                JOptionPane.showMessageDialog(appendButton, "Failure while loading node:\n"+t.getMessage());
                 appendButton.setEnabled(true);
            }
            
            
        });
        
        
    }//GEN-LAST:event_appendButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appendButton;
    private javax.swing.JTextField appendNodeTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JRadioButton plainTextRadioButton;
    private javax.swing.JRadioButton referenceRadioButton;
    private javax.swing.JTextField secretTextField;
    private javax.swing.JTextField toNodeTextField;
    private javax.swing.JRadioButton valueRadioButton;
    // End of variables declaration//GEN-END:variables
}
