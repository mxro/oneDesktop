/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package one.app.desktop.internal;

import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import one.client.jre.OneJre;
import one.common.nodes.v01.OneBytesData;
import one.core.domain.OneClient;
import one.core.dsl.CoreDsl;
import one.core.dsl.callbacks.WhenLoaded;
import one.core.dsl.callbacks.WhenShutdown;
import one.core.dsl.callbacks.results.WithLoadResult;

/**
 *
 * @author mroh004
 */
public class UploadPictureForm extends javax.swing.JPanel {

    private BufferedImage selectedImage = null;

    /**
     * Creates new form UploadPicture
     */
    public UploadPictureForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        toNodeField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        secretField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        uploadButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        importFromClipboardButton = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        jLabel1.setText("to Node:");

        jLabel2.setText("Secret:");

        uploadButton.setText("Upload");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadButton)
                .addContainerGap())
        );

        jLabel3.setText("Picture");

        importFromClipboardButton.setText("Import from Clipboard");
        importFromClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFromClipboardButtonActionPerformed(evt);
            }
        });

        statusLabel.setText("No image loaded yet.");

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(statusLabel)
                .addContainerGap(163, Short.MAX_VALUE))
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(statusLabel)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jLabel4.setText("Name");

        nameField.setText("image");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(importFromClipboardButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField))
                            .addComponent(toNodeField)
                            .addComponent(secretField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(toNodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(secretField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(importFromClipboardButton)
                    .addComponent(jLabel4)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void importFromClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFromClipboardButtonActionPerformed
        Image img = getImageFromClipboard();

        if (img == null || !(img instanceof BufferedImage)) {
            statusLabel.setVisible(true);
            statusLabel.setText("Currently no valid image in clipboard.");
            return;
        }

        selectedImage = (BufferedImage) img;

        statusLabel.setVisible(false);
        ImageObserver io = new ImageObserver() {

            public boolean imageUpdate(Image img, int infoflags, int x, int y, int width, int height) {
                return true;
            }
        };
        final ImageIcon imageIcon = new ImageIcon(img.getScaledInstance(Math.min(img.getWidth(io), imagePanel.getWidth()), Math.min(img.getHeight(io), imagePanel.getHeight()), 0));
        imagePanel.removeAll();
        JLabel pic = new JLabel(imageIcon);
        imagePanel.setLayout(new BorderLayout());
        imagePanel.add(pic);
    }//GEN-LAST:event_importFromClipboardButtonActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed

        final CoreDsl dsl = OneJre.init("<no api key>");

        final OneClient c = dsl.createClient();

        uploadButton.setEnabled(false);
        
        dsl.load(toNodeField.getText()).withSecret(secretField.getText()).in(c).and(new WhenLoaded() {

            @Override
            public void thenDo(WithLoadResult<Object> wlr) {

                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                try {
                    ImageIO.write(selectedImage, "png", bos);
                    bos.flush();
                } catch (Throwable t) {
                    onFailure(t);
                    return;
                }

                byte[] data = bos.toByteArray();

                OneBytesData nodeData = new one.common.nodes.v01.OneBytesData(data, "image/png");

                dsl.append(nodeData).to(wlr.loadedNode()).atAddress("./"+nameField).in(c);
                
                dsl.shutdown(c).and(new WhenShutdown() {

                    @Override
                    public void thenDo() {
                        uploadButton.setEnabled(true);
                    }
                });

            }

            @Override
            public void onFailure(Throwable t) {
                JOptionPane.showMessageDialog(null, "Could not load node\n." + t.getMessage(), "onedb", 1);
                uploadButton.setEnabled(true);
            }
        });

    }//GEN-LAST:event_uploadButtonActionPerformed

    public static Image getImageFromClipboard() {
        Transferable trans = Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null);

        if (trans == null) {
            return null;
        }

        try {
            if (trans != null && trans.isDataFlavorSupported(DataFlavor.imageFlavor)) {
                Image img = (Image) trans.getTransferData(DataFlavor.imageFlavor);
                return img;
            }
        } catch (UnsupportedFlavorException e) {
            return null;
        } catch (IOException e) {
            return null;
        }
        return null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imagePanel;
    private javax.swing.JButton importFromClipboardButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField secretField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField toNodeField;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
